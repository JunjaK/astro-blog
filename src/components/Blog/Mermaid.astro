---
export interface Props {
  title?: string;
}
const { title = '' } = Astro.props;
---
<figure class="expandable-diagram">
  <figcaption>{title}</figcaption>

  <div class="diagram-content">Loading diagram...</div>
  <slot />

  <!--<details>-->
  <!--  <summary>Source</summary>-->
  <!--</details>-->
</figure>

<script>
  import mermaid from 'mermaid';
  // Postpone mermaid initialization

  type MermaidTheme = 'default' | 'base' | 'dark' | 'forest' | 'neutral' | 'null' | undefined;

  const theme: MermaidTheme = localStorage.getItem('theme') === 'dark' ? 'dark' : 'default';

  mermaid.initialize({ startOnLoad: false, theme });

  function extractMermaidCode() {
    // Find all mermaid components
    const mermaidElements = document.querySelectorAll('figure.expandable-diagram');
    mermaidElements.forEach((element) => {
      // Find the `copy` button for each component
      const copyButton = element.querySelector('.copy button');
      // Extract the code from the `data-code` attribute
      let code = copyButton.dataset.code;
      // Replace the U+007f character with `\n` to simulate new lines
      code = code.replace(/\u007F/g, '\n');
      // Construct the `pre` element for the diagram code
      const preElement = document.createElement('pre');
      preElement.className = 'mermaid not-prose';
      preElement.innerHTML = code;
      // Find the diagram content container and override it's content
      const diagramContainer = element.querySelector('.diagram-content');
      diagramContainer.replaceChild(preElement, diagramContainer.firstChild);
    });
  }

  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', async () => {
    extractMermaidCode();
    const theme: MermaidTheme = localStorage.getItem('theme') === 'dark' ? 'dark' : 'default';
    mermaid.initialize({ startOnLoad: true, theme });
  });

  document.body.addEventListener('theme-set', async () => {
    // extractMermaidCode();
    extractMermaidCode();

    const theme: MermaidTheme = localStorage.getItem('theme') === 'dark' ? 'dark' : 'default';
    mermaid.initialize({ startOnLoad: false, theme });
  });
</script>
