---
export interface Props {
  title?: string;
}
const { title = '' } = Astro.props;
---
<figure class="expandable-diagram">
  <figcaption>{title}</figcaption>

  <div class="diagram-content">Loading diagram...</div>
  <slot />
</figure>

<script>
import mermaid from 'mermaid';

  type MermaidTheme = 'default' | 'base' | 'dark' | 'forest' | 'neutral' | 'null' | undefined;

function extractMermaidCode() {
  const mermaidElements = document.querySelectorAll('figure.expandable-diagram');

  mermaidElements.forEach((element) => {
    const copyButton = element.querySelector('.copy button');

    if (copyButton == null)
      return;
    let code = copyButton.getAttribute('data-code') ?? '';

    code = code.replace(/\u007F/g, '\n');
    // Construct the `pre` element for the diagram code
    const preElement = document.createElement('pre');
    preElement.className = 'language-mermaid';
    preElement.innerHTML = code;
    if (preElement.getAttribute('data-original-code') == null) {
      preElement.setAttribute('data-original-code', code);
    }
    // Find the diagram content container and override it's content
    const diagramContainer = element.querySelector('.diagram-content');
    if (diagramContainer?.firstChild) {
      diagramContainer.replaceChild(preElement, diagramContainer.firstChild);
    }

    const expressiveCode = element.querySelector('.expressive-code');
    if (expressiveCode) {
      element.removeChild(expressiveCode);
    }
  });
}

async function themeSetHandler() {
  const theme: MermaidTheme = localStorage.getItem('theme') === 'dark' ? 'dark' : 'default';
  mermaid.initialize({ startOnLoad: false, theme });

  await mermaid.run({
    querySelector: '.language-mermaid',
  });
}

function mermaidInit() {
  document.body.removeEventListener('theme-set', themeSetHandler);
  document.body.addEventListener('theme-set', themeSetHandler);

  extractMermaidCode();
  themeSetHandler();
}

document.addEventListener('astro:after-swap', mermaidInit);
document.addEventListener('astro:page-load', mermaidInit);
</script>
